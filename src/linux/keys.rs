use evdev::Key;

pub fn key_to_num(key_id: &Key) -> Option<u8> {
    let num = match key_id {
        &Key::KEY_ESC => 0,
        &Key::KEY_BACKSPACE => 1,
        &Key::KEY_LEFT => 2,
        &Key::KEY_RIGHT => 3,
        &Key::KEY_UP => 4,
        &Key::KEY_DOWN => 5,
        &Key::KEY_SPACE => 6,
        &Key::KEY_A => 7,
        &Key::KEY_B => 8,
        &Key::KEY_C => 9,
        &Key::KEY_D => 10,
        &Key::KEY_E => 11,
        &Key::KEY_F => 12,
        &Key::KEY_G => 13,
        &Key::KEY_H => 14,
        &Key::KEY_I => 15,
        &Key::KEY_J => 16,
        &Key::KEY_K => 17,
        &Key::KEY_L => 18,
        &Key::KEY_M => 19,
        &Key::KEY_N => 20,
        &Key::KEY_O => 21,
        &Key::KEY_P => 22,
        &Key::KEY_Q => 23,
        &Key::KEY_R => 24,
        &Key::KEY_S => 25,
        &Key::KEY_T => 26,
        &Key::KEY_U => 27,
        &Key::KEY_V => 28,
        &Key::KEY_W => 29,
        &Key::KEY_X => 30,
        &Key::KEY_Y => 31,
        &Key::KEY_Z => 32,
        &Key::KEY_0 => 33,
        &Key::KEY_1 => 34,
        &Key::KEY_2 => 35,
        &Key::KEY_3 => 36,
        &Key::KEY_4 => 37,
        &Key::KEY_5 => 38,
        &Key::KEY_6 => 39,
        &Key::KEY_7 => 40,
        &Key::KEY_8 => 41,
        &Key::KEY_9 => 42,
        &Key::KEY_LEFTSHIFT => 43,
        &Key::KEY_LEFTCTRL => 44,
        &Key::KEY_RIGHTCTRL => 45,
        &Key::KEY_LEFTALT => 46,
        &Key::KEY_RIGHTALT => 47,
        &Key::KEY_SLASH => 48,
        &Key::KEY_MINUS => 49,
        &Key::KEY_DOT => 50,
        &Key::KEY_COMMA => 51,
        _ => return None,
    };

    return Some(num);
}
